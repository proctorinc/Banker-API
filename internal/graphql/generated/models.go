// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gen

import (
	"github.com/proctorinc/banker/internal/db"
	"github.com/proctorinc/banker/internal/graphql/paging"
)

type AccountConnection struct {
	Edges    []AccountEdge    `json:"edges"`
	PageInfo *paging.PageInfo `json:"pageInfo"`
}

type AccountEdge struct {
	Cursor *string     `json:"cursor,omitempty"`
	Node   *db.Account `json:"node"`
}

type CreateFundInput struct {
	Type string  `json:"type"`
	Name string  `json:"name"`
	Goal float64 `json:"goal"`
}

type DateFilter struct {
	StartDate string `json:"startDate"`
	EndDate   string `json:"endDate"`
}

type FundAllocationConnection struct {
	Edges    []FundAllocationEdge `json:"edges"`
	PageInfo *paging.PageInfo     `json:"pageInfo"`
}

type FundAllocationEdge struct {
	Cursor *string            `json:"cursor,omitempty"`
	Node   *db.FundAllocation `json:"node"`
}

type FundConnection struct {
	Edges    []FundEdge       `json:"edges"`
	PageInfo *paging.PageInfo `json:"pageInfo"`
}

type FundEdge struct {
	Cursor *string  `json:"cursor,omitempty"`
	Node   *db.Fund `json:"node"`
}

type FundsResponse struct {
	Stats *FundsStats     `json:"stats"`
	Funds *FundConnection `json:"funds"`
}

type FundsStats struct {
	TotalSavings float64 `json:"totalSavings"`
	Saved        float64 `json:"saved"`
	Spent        float64 `json:"spent"`
	Unallocated  float64 `json:"unallocated"`
}

type IncomeStats struct {
	Total        float64                `json:"total"`
	Transactions *TransactionConnection `json:"transactions"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type MerchantConnection struct {
	Edges    []MerchantEdge   `json:"edges"`
	PageInfo *paging.PageInfo `json:"pageInfo"`
}

type MerchantEdge struct {
	Cursor *string      `json:"cursor,omitempty"`
	Node   *db.Merchant `json:"node"`
}

type MonthItem struct {
	ID    string `json:"id"`
	Name  string `json:"name"`
	Year  string `json:"year"`
	Start string `json:"start"`
	End   string `json:"end"`
}

type Mutation struct {
}

type NetStats struct {
	Total        float64                `json:"total"`
	Transactions *TransactionConnection `json:"transactions"`
}

type Query struct {
}

type RegisterInput struct {
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type SpendingStats struct {
	Total        float64                `json:"total"`
	Transactions *TransactionConnection `json:"transactions"`
}

type Stats struct {
	Spending *SpendingStats `json:"spending,omitempty"`
	Income   *IncomeStats   `json:"income,omitempty"`
	Net      *NetStats      `json:"net,omitempty"`
}

type StatsInput struct {
	Filter *DateFilter `json:"filter"`
}

type TransactionConnection struct {
	Edges    []TransactionEdge `json:"edges"`
	PageInfo *paging.PageInfo  `json:"pageInfo"`
}

type TransactionEdge struct {
	Cursor *string         `json:"cursor,omitempty"`
	Node   *db.Transaction `json:"node"`
}

type UploadResponse struct {
	Success      bool         `json:"success"`
	Accounts     *UploadStats `json:"accounts"`
	Transactions *UploadStats `json:"transactions"`
}

type UploadStats struct {
	Updated int `json:"updated"`
	Failed  int `json:"failed"`
}

type UserConnection struct {
	Edges    []UserEdge       `json:"edges"`
	PageInfo *paging.PageInfo `json:"pageInfo"`
}

type UserEdge struct {
	Cursor *string  `json:"cursor,omitempty"`
	Node   *db.User `json:"node"`
}
